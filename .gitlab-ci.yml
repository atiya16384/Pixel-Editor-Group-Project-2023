variables:
  SNYK_TOKEN: $SNYK_TOKEN
  CURRENT_VER: v0.3.$CI_PIPELINE_IID
  SNAPSHOT_VER: $CURRENT_VER-SNAPSHOT

  MAVEN_OPTS: >-
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true

  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
    -DinstallAtEnd=true
    -DdeployAtEnd=true

image: maven:3-openjdk-17
stages:
  - compile
  - test
  - package
  - release
cache:
  paths:
    - .m2/repository
    - ./target/

# Stages
compile:
  stage: compile
  script:
    - if [ ! -f ci_settings.xml ]; then
        echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/packages/maven_repository/index.html#create-maven-packages-with-gitlab-cicd for instructions.";
      fi
    - 'mvn $MAVEN_CLI_OPTS compile --settings ci_settings.xml -Drevision=$SNAPSHOT_VER'

test:
  stage: test
  dependencies:
    - compile
  script:
    - 'mvn $MAVEN_CLI_OPTS test'
  needs:
    - job: compile

# Packaging
package:main:
  stage: package
  dependencies:
    - compile
    - test
  rules:
  - if: $CI_COMMIT_TAG || $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - echo "Saving job $CI_JOB_ID if required for release"
    - echo GE_JOB_ID=$CI_JOB_ID >> generate_executables.env
    - ls target
  script:
    - if [ ! -f ci_settings.xml ]; then
        echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/packages/maven_repository/index.html#create-maven-packages-with-gitlab-cicd for instructions.";
      fi
    - 'mvn $MAVEN_CLI_OPTS package --settings ci_settings.xml -Drevision=$CURRENT_VER'
  after_script:
    - 'cp $CI_PROJECT_DIR/target/pixel-editor-$CURRENT_VER-jar-with-dependencies.jar ./pixel-editor-$CURRENT_VER.jar'
  artifacts:
    name: "com.group31.editor $CURRENT_VER"
    paths:
      - ./pixel-editor-$CURRENT_VER.jar
    reports:
      dotenv: generate_executables.env
  needs:
    - job: compile
    - job: test

package:dev:
  stage: package
  dependencies:
    - compile
    - test
  rules:
  - if: $CI_COMMIT_BRANCH == "dev"
  before_script:
    - echo "Saving job $CI_JOB_ID if required for release"
    - echo GE_JOB_ID=$CI_JOB_ID >> generate_executables.env
  script:
    - if [ ! -f ci_settings.xml ]; then
        echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/packages/maven_repository/index.html#create-maven-packages-with-gitlab-cicd for instructions.";
      fi
    - 'mvn $MAVEN_CLI_OPTS package --settings ci_settings.xml -Drevision=$SNAPSHOT_VER'
  after_script:
    - 'cp $CI_PROJECT_DIR/target/pixel-editor-$SNAPSHOT_VER-jar-with-dependencies.jar ./pixel-editor-$SNAPSHOT_VER.jar'
  artifacts:
    name: "com.group31.editor $SNAPSHOT_VER"
    paths:
      - ./pixel-editor-$SNAPSHOT_VER.jar
    reports:
      dotenv: generate_executables.env
  needs:
    - job: compile
    - job: test

package:canary:
  stage: package
  dependencies:
    - compile
    - test
  only:
    - /^prototype-.*$/
  script:
    - if [ ! -f ci_settings.xml ]; then
        echo "CI settings missing\! If deploying to GitLab Maven Repository, please see https://docs.gitlab.com/ee/user/packages/maven_repository/index.html#create-maven-packages-with-gitlab-cicd for instructions.";
      fi
    - 'mvn $MAVEN_CLI_OPTS package --settings ci_settings.xml -Drevision=$CURRENT_VER-CANARY'
  after_script:
    - 'cp $CI_PROJECT_DIR/target/pixel-editor-$CURRENT_VER-CANARY-jar-with-dependencies.jar ./pixel-editor-$CURRENT_VER-CANARY.jar'
  artifacts:
    name: "com.group31.editor $CURRENT_VER-CANARY"
    paths:
      - ./pixel-editor-$CURRENT_VER-CANARY.jar
  needs:
    - job: compile
    - job: test

# Release
# release:main:
#   stage: release
#   image: registry.gitlab.com/gitlab-org/release-cli:latest
#   dependencies:
#     - package:main
#   rules:
#     - if: $CI_COMMIT_TAG
#       when: never                                  # Do not run this job when a tag is created manually
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH 
#   script:
#     - echo "Release $CURRENT_VER"
#   release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
#     tag_name: '$CURRENT_VER'
#     description: '$CI_COMMIT_TAG'
#     ref: '$CI_COMMIT_SHA'
#     milestones:
#       - "Milestone 1"
#     assets:
#       links:
#         - name: 'Packaged JAR executable'
#           url: 'https://scc-source.lancs.ac.uk/scc210-2022-23/scc210-2223-grp-31/cw/-/jobs/${GE_JOB_ID}/artifacts/file/dist/pixel-editor-$CURRENT_VER.jar'
#   needs:
#     - job: package:main

# release:dev:
#   stage: release
#   image: registry.gitlab.com/gitlab-org/release-cli:latest
#   dependencies:
#     - package:dev
#   rules:
#     - if: $CI_COMMIT_BRANCH == "dev"
#   script:
#     - echo "Release $SNAPSHOT_VER"
#   release:                               # See https://docs.gitlab.com/ee/ci/yaml/#release for available properties
#     tag_name: '$SNAPSHOT_VER'
#     description: '*SNAPSHOT RELEASE* - $CI_COMMIT_SHA - $SNAPSHOT_VER'
#     ref: '$CI_COMMIT_SHA'
#     milestones:
#       - "Milestone 1"
#     assets:
#       links:
#         - name: 'Packaged JAR executable'
#           url: 'https://scc-source.lancs.ac.uk/scc210-2022-23/scc210-2223-grp-31/cw/-/jobs/${GE_JOB_ID}/artifacts/file/dist/pixel-editor-$SNAPSHOT_VER.jar'
#   needs:
#     - job: package:dev

# Sentry Log Release
release:main:sentry:
  stage: release
  image: ubuntu:latest
  dependencies:
    - package:main
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH 
  script:
    - echo "Release $CURRENT_VER"
    - apt update && apt install curl -y
    - curl -sL https://sentry.io/get-cli/ | SENTRY_CLI_VERSION="2.10.0" bash
    - sentry-cli releases new "$CURRENT_VER"
    - sentry-cli releases set-commits "$CURRENT_VER" --auto
    - sentry-cli releases files "$CURRENT_VER" upload  ./pixel-editor-$CURRENT_VER.jar
    - sentry-cli releases deploys "$CURRENT_VER" new -e production
    - sentry-cli releases finalize "$CURRENT_VER"
  needs:
    - job: package:main
      artifacts: true

release:dev:sentry:
  stage: release
  image: ubuntu:latest
  dependencies:
    - package:dev
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
  script:
    - echo "Release $SNAPSHOT_VER"
    - apt update && apt install curl -y
    - curl -sL https://sentry.io/get-cli/ | SENTRY_CLI_VERSION="2.10.0" bash
    - sentry-cli releases new "$SNAPSHOT_VER"
    - sentry-cli releases set-commits "$SNAPSHOT_VER" --auto
    - sentry-cli releases files "$SNAPSHOT_VER" upload  ./pixel-editor-$SNAPSHOT_VER.jar
    - sentry-cli releases deploys "$SNAPSHOT_VER" new -e snapshot
    - sentry-cli releases finalize "$SNAPSHOT_VER"
  needs:
    - job: package:dev
      artifacts: true
